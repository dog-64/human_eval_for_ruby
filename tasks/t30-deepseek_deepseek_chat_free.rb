def get_positive(numbers)
  numbers.select { |num| num > 0 }
end

## task_id
HumanEval/31

## Описание задачи
Ruby 3.2.

Напишите функцию `is_prime(n)`, которая принимает целое число и возвращает `true`, если число является простым, и `false` в противном случае.

**Входные параметры:**

* `n`: Целое число.

**Возвращаемое значение:**

* `true`, если число является простым, и `false` в противном случае.

**Примеры использования:**

* `is_prime(2)` должен вернуть `true`
* `is_prime(4)` должен вернуть `false`
* `is_prime(13)` должен вернуть `true`
* `is_prime(1)` должен вернуть `false`

**Особые случаи и ограничения:**

* Числа меньше 2 не являются простыми.
* Функция должна корректно обрабатывать отрицательные числа, возвращая `false`.


Реализация должна быть на Ruby 3.2.


## Решение задачи
Для проверки, является ли число простым, можно использовать метод перебора делителей. Простое число — это число, которое делится только на 1 и на само себя. Если число n делится на любое число от 2 до корня из n, то оно не является простым.

Кроме того, необходимо учитывать, что числа меньше 2 не являются простыми, а также отрицательные числа.

Реализация функции `is_prime` будет следующей:


def is_prime(n)
  return false if n < 2
  (2..Math.sqrt(n)).each do |i|
    return false if n % i == 0
  end
  true
end
